{"version":"3","listProblem":[{
  "tool": "Code Inspection",
  "category": "Code style issues",
  "type": "Field may be 'final'",
  "severity": "High",
  "comment": "Field 'description' may be 'final'",
  "detailsInfo": "Reports fields that can be safely made `final`. All `final` fields have a value and this value does not change, which can make the code easier to reason about.\n\nTo avoid too expensive analysis, this inspection only reports if the field has a `private` modifier\nor it is defined in a local or anonymous class.\nA field can be `final` if:\n\n* It is `static` and initialized once in its declaration or in one `static` initializer.\n* It is non-`static` and initialized once in its declaration, in one instance initializer or in every constructor\n\nAnd it is not modified anywhere else.\n\n**Example:**\n\n\n      public class Person {\n        private String name; // can be final\n\n        Person(String name) {\n          this.name = name;\n        }\n\n        public String getName() {\n          return name;\n        }\n      }\n\nAfter the quick-fix is applied:\n\n\n      public class Person {\n        private final String name;\n\n        Person(String name) {\n          this.name = name;\n        }\n\n        public String getName() {\n          return name;\n        }\n      }\n",
  "sources": [
    {
      "type": "file",
      "path": "src/main/java/simple/automation/OrderTests.java",
      "language": "JAVA",
      "line": 53,
      "offset": 24,
      "length": 11,
      "code": {
        "startLine": 51,
        "length": 11,
        "offset": 34,
        "surroundingCode": "        }\n\n        private String description;\n        public String getDescription(){\n            return description;"
      }
    }
  ],
  "attributes": {
    "module": "java-basics.main",
    "inspectionName": "FieldMayBeFinal"
  },
  "hash": "61934a5c0ddb974d25896446300916b2c0ac187e4fdc28aba916d8f5141cdfb4"
}]}